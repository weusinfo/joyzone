<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.joyzone.platform.core.mapper.OrderMapper" >
  <resultMap id="BaseResultMap" type="com.joyzone.platform.core.model.OrderModel" >
    <!--
      WARNING - @mbggenerated
    -->
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="team_id" property="teamId" jdbcType="BIGINT" />
    <result column="order_type" property="orderType" jdbcType="INTEGER" />
    <result column="order_no" property="orderNo" jdbcType="VARCHAR" />
    <result column="shop_type_id" property="shopTypeName" jdbcType="INTEGER" />
    <result column="status" property="status" jdbcType="INTEGER" />
    <result column="shop_id" property="shopId" jdbcType="BIGINT" />
    <result column="price" property="price" jdbcType="DECIMAL" />
    <result column="person_num" property="personNum" jdbcType="INTEGER" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
    <result column="pay_time" property="payTime" jdbcType="TIMESTAMP" />
  </resultMap>

  <resultMap id="teamOrderListMap" type="com.joyzone.platform.core.dto.OrderMineDto">
    <id column="teamOrInvitingId" property="teamOrInvitingId" jdbcType="BIGINT" />
    <result column="shopId" property="shopId" jdbcType="BIGINT" />
    <result column="shopOrUserImg" property="shopOrUserImg" jdbcType="VARCHAR" />
    <result column="shopOrContentName" property="shopOrContentName" jdbcType="VARCHAR" />
    <result column="address" property="address" jdbcType="VARCHAR" />
    <result column="startTime" property="startTime" jdbcType="TIMESTAMP" />
    <result column="personNum" property="personNum" jdbcType="INTEGER" />
    <result column="payWay" property="payWay" jdbcType="INTEGER" />
    <result column="orderStatus" property="orderStatus" jdbcType="INTEGER" />
    <result column="orderType" property="orderType" jdbcType="INTEGER" />
    <collection property="userJoinList" javaType="ArrayList" column="{teamOrInvitingId=teamOrInvitingId,orderType=orderType}" select="com.joyzone.platform.core.mapper.OrderMapper.queryUserJoinTeamList"
                fetchType="lazy" ofType="com.joyzone.platform.core.dto.UserJoinTeamDto">

    </collection>
  </resultMap>

  <resultMap id="userJoinTeamMap" type="com.joyzone.platform.core.dto.UserJoinTeamDto">
    <id column="teamOrInvitingId" property="teamOrInvitingId" jdbcType="BIGINT" />
    <result column="orderType" property="orderType" jdbcType="INTEGER" />
    <result column="userId" property="userId" jdbcType="BIGINT" />
    <result column="userHeadImg" property="userHeadImg" jdbcType="VARCHAR" />
  </resultMap>

  <sql id="BaseResultSQL">
    id,team_id,order_type,order_no,shop_kind,shop_id,person_num,create_time,update_time,pay_time,status
  </sql>

  <select id="getOrderList" resultType="com.joyzone.platform.core.dto.OrderDto" parameterType="com.joyzone.platform.core.dto.OrderDto">
    select
      o.id,o.order_no as orderNo,o.order_type as orderType,o.person_num as personNum,o.price,
      o.pay_time as payTime,o.team_id as teamId,o.create_time as createTime,o.status,
      s.id as shopId,s.`name` as shopName,st.id as shopTypeId,st.`name` as shopTypeName
    from orders o LEFT JOIN shop s on s.id = o.shop_id
    LEFT JOIN shop_type st on st.id = o.shop_type_id
    where 1=1
    <if test="orderType != null">
      and o.order_type = #{orderType}
    </if>
    <if test="shopId != null">
      and o.shop_id = #{shopId}
    </if>
    <if test="status != null">
      and o.status = #{status}
    </if>
    <if test="shopTypeId != null">
      and o.shopTypeId = #{shopTypeId}
    </if>
  </select>

  <select id="findById" resultType="com.joyzone.platform.core.dto.OrderDto">
    select
    o.id,o.order_no as orderNo,o.order_type as orderType,o.person_num as personNum,o.price,
    o.pay_time as payTime,o.team_id as teamId,o.create_time as createTime,o.status,
    s.id as shopId,s.`name` as shopName,st.id as shopTypeId,st.`name` as shopTypeName
    from orders o LEFT JOIN shop s on s.id = o.shop_id
    LEFT JOIN shop_type st on st.id = o.shop_type_id
    where o.id = #{id}
  </select>

  <select id="getTeamOrderListOld" resultMap="teamOrderListMap" parameterType="com.joyzone.platform.core.model.OrderModel">
    SELECT
    t.id AS teamOrCouponId,
    0 AS orderType,
    t.shop_id AS shopId,
    s.cover_img AS shopImg,
    s.name AS shopName,
    s.address AS shopAddress,
    t.start_time AS startTime,
    t.number AS personNum
    FROM team_users tu
    LEFT JOIN team t ON t.id = tu.team_id
    LEFT JOIN shop s ON s.id = t.shop_id
    WHERE tu.user_id = #{userId}
    AND t.status = 0
    AND tu.status = 0
    AND t.start_time > NOW()
    <if test="type == 0">
      AND t.result = 0
    </if>
    <if test="type == 1">
      AND t.result = 1
    </if>

    UNION

    SELECT
    sc.id AS teamOrCouponId,
    1 AS orderType,
    sc.shop_id AS shopId,
    s.cover_img AS shopImg,
    s.name AS shopName,
    s.address AS shopAddress,
    sc.start_time AS startTime,
    sc.number AS personNum
    FROM coupon_user cu
    LEFT JOIN shop_coupon sc ON sc.id = cu.coupon_id
    LEFT JOIN shop s ON s.id = sc.shop_id
    WHERE cu.user_id = #{userId}
    AND cu.status = 0
    AND sc.status = 1
    AND sc.start_time > NOW()
    <if test="type == 0">
      AND sc.result = 0
    </if>
    <if test="type == 1">
      AND sc.result = 1
    </if>
  </select>
  <select id="getTeamOrderList" resultMap="teamOrderListMap" parameterType="com.joyzone.platform.core.model.OrderModel">
    <if test="type == 0">
      (SELECT
        t.id AS teamOrInvitingId,
        t.shop_id AS shopId,
        s.cover_img AS shopOrUserImg,
        s.name AS shopOrContentName,
        s.address AS address,
        t.start_time AS startTime,
        t.number AS personNum,
        t.pay_way AS payWay,
        IF(t.start_time > NOW(),0,1) AS orderStatus,
        0 AS orderType
      FROM team t
      LEFT JOIN shop s ON s.id = t.shop_id
      WHERE t.owner = #{userId}
      AND t.status = 0
      ORDER BY t.start_time DESC
      LIMIT 100)

      UNION

      (SELECT
        i.id AS teamOrInvitingId,
        NULL AS shopId,
        u.head_pic AS shopOrUserImg,
        i.content AS shopOrContentName,
        i.address AS address,
        i.start_time AS startTime,
        i.number AS personNum,
        i.pay_way AS payWay,
        IF(i.start_time > NOW(),0,1) AS orderStatus,
        1 AS orderType
      FROM inviting i
      LEFT JOIN user u ON u.id = i.owner
      WHERE i.owner = #{userId}
      AND i.status = 0
      AND u.status = 0
      ORDER BY i.start_time DESC
      LIMIT 100)
    </if>
    <if test="type == 1">
      (SELECT
      t.id AS teamOrInvitingId,
      t.shop_id AS shopId,
      s.cover_img AS shopOrUserImg,
      s.name AS shopOrContentName,
      s.address AS address,
      t.start_time AS startTime,
      t.number AS personNum,
      t.pay_way AS payWay,
      IF(t.start_time > NOW(),0,1) AS orderStatus,
      0 AS orderType
      FROM team_users tu
      LEFT JOIN team t ON t.id = tu.team_id
      LEFT JOIN shop s ON s.id = t.shop_id
      WHERE tu.user_id = #{userId}
      AND tu.status = 0
      AND t.owner <![CDATA[ <> ]]> #{userId}
      AND t.status = 0
      ORDER BY t.start_time DESC
      LIMIT 100)

      UNION

      (SELECT
      i.id AS teamOrInvitingId,
      NULL AS shopId,
      u.head_pic AS shopOrUserImg,
      i.content AS shopOrContentName,
      i.address AS address,
      i.start_time AS startTime,
      i.number AS personNum,
      i.pay_way AS payWay,
      IF(i.start_time > NOW(),0,1) AS orderStatus,
      1 AS orderType
      FROM inviting_user iu
      LEFT JOIN inviting i ON i.id = iu.inviting_id
      LEFT JOIN user u ON u.id = i.owner
      WHERE iu.user_id = #{userId}
      AND i.owner <![CDATA[ <> ]]> #{userId}
      AND i.status = 0
      AND u.status = 0
      AND iu.status = 0
      ORDER BY i.start_time DESC
      LIMIT 100)
    </if>
  </select>

  <select id="queryUserJoinTeamList" resultMap="userJoinTeamMap">
    <if test="orderType == 0">
      SELECT
      tu.team_id AS teamOrInvitingId,
      0 AS orderType,
      u.id AS userId,
      u.head_pic AS userHeadImg
      FROM team_users tu
      LEFT JOIN user u ON u.id = tu.user_id
      WHERE tu.team_id = #{teamOrInvitingId} AND tu.status = 0
    </if>
    <if test="orderType == 1">
      SELECT
      iu.inviting_id AS teamOrInvitingId,
      1 AS orderType,
      u.id AS userId,
      u.head_pic AS userHeadImg
      FROM inviting_user iu
      LEFT JOIN `user` u ON u.id = iu.user_id
      WHERE iu.inviting_id = #{teamOrInvitingId} AND iu.status = 0
    </if>
  </select>

  <delete id="delOrders">
    delete from orders where id in
    <foreach collection="ids" item="id" index="index" open="(" close=")" separator=",">
        #{id}
    </foreach>
  </delete>

</mapper>